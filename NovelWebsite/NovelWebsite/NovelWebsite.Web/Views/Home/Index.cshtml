@using NovelWebsite.NovelWebsite.Core.Constants;
@using NovelWebsite.NovelWebsite.Core.Enums;
@{
    ViewData["Title"] = "Home Page";
}

<div class="index__row row">
    @await Component.InvokeAsync("HomeCategory")
    @await Component.InvokeAsync("HomeBanner")
    @await Component.InvokeAsync("HomePost")
</div>

<div class="index__row row">
    @await Component.InvokeAsync("BooksTrending")
    @await Component.InvokeAsync("BooksEditorRecommend")
</div>

<div class="index__banner">
    <a href="javascript:void(0)"><img src="/image/test.jpg" class="banner-sm"></a>
</div>

<div class="index__row row">
    @await Component.InvokeAsync("TopBooksByInteraction", new {type = InteractionType.View, title = "Lượt xem"})
    @await Component.InvokeAsync("TopBooksByInteraction", new {type = InteractionType.Recommend, title = "Đề cử"})
    @await Component.InvokeAsync("TopBooksByInteraction", new {type = InteractionType.Like, title = "Yêu thích"})
    @await Component.InvokeAsync("TopBooksByInteraction", new {type = InteractionType.Follow, title = "Theo dõi"})
</div>

<div class="index__banner">
    <a href="javascript:void(0)"><img src="/image/test2.jpg" class="banner-sm"></a>
</div>

@await Component.InvokeAsync("TopBooksByBookStatus", BookStatus.Ongoing);

<div class="index__banner">
    <a href="javascript:void(0)"><img src="/image/test.jpg" class="banner-sm"></a>
</div>

@await Component.InvokeAsync("TopBooksByBookStatus", BookStatus.Complete);

